create table if not exists mpa (
    id integer generated by default as identity primary key,
    name varchar unique not null
);

create table if not exists film (
    id integer generated by default as identity primary key,
    name varchar not null,
    description varchar(200),
    release_date date,
    duration int,
    mpa_id int references mpa (id),
    likes_count int default 0
);

create table if not exists genre (
    id integer generated by default as identity primary key,
    name varchar unique not null
);

create table if not exists film_genre (
    film_id int references film (id) on delete cascade,
    genre_id int references genre (id),
    constraint film_genre_pk primary key (film_id, genre_id)
);

create table if not exists "USER" (
    id integer generated by default as identity primary key,
    email varchar unique not null,
    login varchar unique not null,
    name varchar,
    birthday date
);

create table if not exists liked_film (
    film_id int references film (id) on delete cascade,
    user_id int references "USER" (id) on delete cascade,
    constraint liked_film_pk primary key (film_id, user_id)
);

create table if not exists friend (
    user_id int references "USER" (id) on delete cascade,
    other_user_id int references "USER" (id) on delete cascade,
    constraint friend_pk primary key (user_id, other_user_id),
    constraint friend_id_check check (user_id <> other_user_id)
);

create table if not exists confirmed_friend (
    user_id int references "USER" (id) on delete cascade,
    other_user_id int references "USER" (id) on delete cascade,
    constraint confirmed_friend_pk primary key (user_id, other_user_id),
    constraint confirmed_friend_id_check check (user_id < other_user_id)
);